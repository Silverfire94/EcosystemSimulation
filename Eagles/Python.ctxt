#BlueJ class context
comment0.target=Python
comment0.text=\n\ A\ simple\ model\ of\ a\ Python.\n\ Pythons\ age,\ move,\ eat\ rabbits,\ and\ die.\n\ \n\ @author\ David\ J.\ Barnes\ and\ Michael\ K\u00F6lling\n\ @version\ 2016.02.29\ (2)\n
comment1.params=randomAge\ male\ field\ location
comment1.target=Python(boolean,\ boolean,\ Field,\ Location)
comment1.text=\n\ Create\ a\ Python.\ A\ Python\ can\ be\ created\ as\ a\ new\ born\ (age\ zero\n\ and\ not\ hungry)\ or\ with\ a\ random\ age\ and\ food\ level.\n\ \n\ @param\ randomAge\ If\ true,\ the\ Python\ will\ have\ random\ age\ and\ hunger\ level.\n\ @param\ field\ The\ field\ currently\ occupied.\n\ @param\ location\ The\ location\ within\ the\ field.\n
comment10.params=
comment10.target=double\ getSpawn()
comment10.text=\n\ @return\ The\ probability\ of\ the\ rabbit\ spawning\n
comment2.params=
comment2.target=Python()
comment2.text=\n\ Another\ constructor\ for\ Pythons.\n
comment3.params=randomAge\ male\ field\ location
comment3.target=Animal\ createAnimal(boolean,\ boolean,\ Field,\ Location)
comment3.text=\n\ This\ allows\ us\ to\ create\ a\ new\ animal\n\ @return\ Returns\ a\ reference\ of\ the\ animal\ we\ created\n
comment4.params=newPythons\ foodweb
comment4.target=void\ act(java.util.List,\ Foodweb)
comment4.text=\n\ This\ is\ what\ the\ Python\ does\ most\ of\ the\ time\:\ it\ hunts\ for\n\ rabbits.\ In\ the\ process,\ it\ might\ breed,\ die\ of\ hunger,\n\ or\ die\ of\ old\ age.\n\ @param\ field\ The\ field\ currently\ occupied.\n\ @param\ newPythons\ A\ list\ to\ return\ newly\ born\ Pythons.\n
comment5.params=
comment5.target=void\ incrementAge()
comment5.text=\n\ Increase\ the\ age.\ This\ could\ result\ in\ the\ Python's\ death.\n
comment6.params=
comment6.target=void\ incrementHunger()
comment6.text=\n\ Make\ this\ Python\ more\ hungry.\ This\ could\ result\ in\ the\ Python's\ death.\n
comment7.params=newPythons
comment7.target=void\ giveBirth(java.util.List)
comment7.text=\n\ Check\ whether\ or\ not\ this\ Python\ is\ to\ give\ birth\ at\ this\ step.\n\ New\ births\ will\ be\ made\ into\ free\ adjacent\ locations.\n\ @param\ newPythons\ A\ list\ to\ return\ newly\ born\ Pythons.\n
comment8.params=
comment8.target=int\ breed()
comment8.text=\n\ Generate\ a\ number\ representing\ the\ number\ of\ births,\n\ if\ it\ can\ breed.\n\ @return\ The\ number\ of\ births\ (may\ be\ zero).\n
comment9.params=
comment9.target=boolean\ canBreed()
comment9.text=\n\ A\ Python\ can\ breed\ if\ it\ has\ reached\ the\ breeding\ age.\n
numComments=11
